<?xml version="1.0" encoding="UTF-8"?>

<!-- <beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:security="http://www.springframework.org/schema/security" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd                 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd                 http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd      http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
 -->
<beans:beans 
	xmlns="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd"
	xmlns:mvc="http://www.springframework.org/schema/mvc">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<!-- Enables the Spring MVC @Controller programming model -->
	
	<context:component-scan base-package="com.clbee.pbcms" />
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" />
	<!-- <beans:bean name="memberDao" class="com.dao.MemberDaoImpl" /> -->
	<!-- <beans:bean name="companyDao" class="dao.CompanyDaoImpl" /> -->
	<!-- <beans:bean id="companyDao" class="dao.CompanyDaoImpl" /> -->

	<mvc:default-servlet-handler />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<!-- Turn off working out content type based on URL file extension, should fall back to looking at the Accept headers -->
		<beans:property name="favorPathExtension" value="false" />
	</beans:bean>
	
	
	 <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
                <beans:bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
                <beans:bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
                <beans:bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
                <beans:bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            </beans:list>
        </beans:property>
    </beans:bean>

	<!-- <beans:bean id="objectMapper"
        class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">

	    by some convenient method
	    <property name="failOnEmptyBeans" value="true"/>
	
	    by enum from jackson
	    <property name="featuresToEnable">
	      <array>
	        util to access enum
	        <util:constant
	            static-field="com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE"/>
	        SpEL to access enum
	        <value>#{T(com.fasterxml.jackson.databind.SerializationFeature).INDENT_OUTPUT}</value>
	      </array>
	    </property>
  </beans:bean> -->
</beans:beans>
